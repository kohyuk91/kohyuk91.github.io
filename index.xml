<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hyuk Ko</title>
    <link>/</link>
    <description>Recent content on Hyuk Ko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Feb 2020 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FFmpeg Screen Capture - CentOS7</title>
      <link>/posts/20200211_ffmpeg_screen_capture_centos7/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0900</pubDate>
      
      <guid>/posts/20200211_ffmpeg_screen_capture_centos7/</guid>
      <description>No Audio ffmpeg -framerate 30 -s 1920x1080 -f x11grab -i :0.0 -c:v libx264 -pix_fmt yuv420p ~/desktop_$(date +%Y%m%dT%H%M%S).mp4 With Audio ffmpeg -framerate 30 -s 1920x1080 -f x11grab -i :0.0 -c:v libx264 -f alsa -ac 2 -i hw:2,0 -pix_fmt yuv420p ~/desktop_$(date +%Y%m%dT%H%M%S).mp4 </description>
    </item>
    
    <item>
      <title>2.5D Locator - ZLOC Part 2</title>
      <link>/posts/20191215_two_point_five_dee_locator_zloc_part2/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0900</pubDate>
      
      <guid>/posts/20191215_two_point_five_dee_locator_zloc_part2/</guid>
      <description>Let’s pick up from where we left off. We have used some fancy expressions to create an image plane. But if we tweak this expression just a little bit we can create a 2.5D Locator from scratch!     First let’s edit the expression.   Instead of manipulating the ScaleX and ScaleY attributes, pipe the same formula to the TranslateX and TranslateY attributes like this…
  [Before] pPlane1.</description>
    </item>
    
    <item>
      <title>Poly Image Plane - ZLOC Part 1</title>
      <link>/posts/20191214_poly_image_plane_zloc_part1/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0900</pubDate>
      
      <guid>/posts/20191214_poly_image_plane_zloc_part1/</guid>
      <description>An Image Plane is just a “Reflection” of a camera’s Film Back.
    We can figure out the Image Plane’s width and height by using some simple math.
    Lets make a Poly Image Plane by using this formula.   First, create a camera. We will be using it’s default settings.
  Focal Length(mm): 35 Horizontal Film Aperture(inch): 1.417 Vertical Film Aperture(inch): 0.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0900</pubDate>
      
      <guid>/projects/</guid>
      <description>ZLOC ZLOC is a 2.5D tracker system built for Science-D-Visions 3DEqualizer and Autodesk Maya. (Based on SynthPipe by Martin Kulig)
  Source Code &amp;amp; Documentation (GitHub)  ZRAY ZRay is a simple Ray-Mesh intersect tool. I focused on making it as simple and intuitive as possible. Originally made for matchmove purposes, but it can be used in many situations.
   MMLEC mmlec은 이제 막 매치무브에 입문한 사람들이 필수로 배워야 하는 개념들을 정리한 리포지토리 입니다.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Fri, 11 Jan 1991 00:00:00 +0900</pubDate>
      
      <guid>/about/</guid>
      <description>Creative, passionate and detail-oriented VFX artist who specializes in matchmove, on-set, layout, technical directing and programming. Strengths include creative problem solving, positive attitude, calm to work under pressure and meet deadlines. I have an endless desire to learn new skills, and I&#39;m always looking for a challenge.
Programming is my big passion. I always try to identify opportunities for automation and often build custom tools to make our work environment more efficient.</description>
    </item>
    
  </channel>
</rss>